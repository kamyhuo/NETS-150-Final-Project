{"ast":null,"code":"import _classCallCheck from \"/Users/varunramakrishnan/nets150finalproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/varunramakrishnan/nets150finalproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/varunramakrishnan/nets150finalproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/varunramakrishnan/nets150finalproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/varunramakrishnan/nets150finalproject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/varunramakrishnan/nets150finalproject/src/RestaurantList.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar RestaurantList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RestaurantList, _Component);\n\n  function RestaurantList(props) {\n    var _this;\n\n    _classCallCheck(this, RestaurantList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RestaurantList).call(this, props)); //props.state is linked with the result sending back from its child a.k.a the result we returned in SearchForm element\n\n    _this.getRestaurantsFromApi = function (cuisine, price) {\n      //UI feedback to tell the user when we are retrieving infromation from the API \n      _this.setState({\n        loading: true\n      }); //using a proxy server cors-anywhere to get rid of the CROS probblem \n      //SUPER HOT TIP: passing the location variable, which equals to the user's input (see below). Instead of grabbbing the entire API, it will only retrieve the restaurants that are closed to the lcoation information we entered. This makes the lodading wayyyyyyy faster.\n\n\n      axios.get('https://cors-anywhere.herokuapp.com/'.concat(\"https://api.yelp.com/v3/businesses/search?location=Philadelphia\"), {\n        //required authorization format from API \n        headers: {\n          //to get the API from the .env file use process.env.{variable name}\n          Authorization: \"Bearer bViYiVvQPGlIKygKlkCrFgsNcCnyNGJgUDCvTSG7dgooeyBjzEM-WzlkVhYsvItlMU-rNDno368sOtZxg2TWtpMgJXmyFIUSXgFzaK8UdwWOXQEL9sbY1yEZoCC5XHYx\"\n        },\n        //option params passed to API call to retrieve only breakfast and lunch spots \n        params: {\n          categories: cuisine,\n          price: price\n        }\n      }).then(function (res) {\n        console.log(res.data.businesses); //change the state of App to reflect on the result we are given from the API\n        //at the same time, setting the loading state to false \n\n        _this.setState({\n          results: res.data.businesses,\n          loading: false\n        });\n      }).catch(function (err) {\n        //fire the errorState message if there is no information return from the API\n        _this.setState({\n          errorState: \"Sorry we coudln't find information related to the location you search, do you want to try something else?\",\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      //leverage the state to store the information return from API to make loading faster\n      results: [],\n      errorState: null,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(RestaurantList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getRestaurantsFromApi(this.props.cuisine, this.props.price);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.cuisine !== prevProps.cuisine) {\n        this.setState({\n          results: []\n        }, function () {\n          return _this2.getRestaurantsFromApi(_this2.props.cuisine, _this2.props.price);\n        });\n      }\n\n      if (this.props.price !== prevProps.price) {\n        this.setState({\n          results: []\n        }, function () {\n          return _this2.getRestaurantsFromApi(_this2.props.cuisine, _this2.props.price);\n        });\n      }\n    } //function to get information from API \n\n  }, {\n    key: \"renderEmptyState\",\n    value: function renderEmptyState() {\n      return React.createElement(\"h2\", {\n        className: \"heading-tertiary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"`Hang tight! We are working on getting you the list of best brunch spots in your neighborhood! `\");\n    }\n  }, {\n    key: \"renderRestaurantInfo\",\n    value: function renderRestaurantInfo() {\n      var RestaruantList = this.state.results.map(function (result) {\n        return React.createElement(\"div\", {\n          className: \"RestaurantInfo\",\n          key: result.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: result.image_url,\n          alt: \"\",\n          className: \"RestaurantInfo__img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          className: \"heading-tertiary RestaurantInfo__name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, result.name), React.createElement(\"p\", {\n          className: \"RestaurantInfo__para\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: \"map-marker-alt\",\n          className: \"RestaurantInfo__icon\",\n          \"aria-label\": \"address:\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), result.location.display_address[0], \", \", result.location.display_address[1]), React.createElement(\"p\", {\n          className: \"RestaurantInfo__para\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: \"phone\",\n          className: \"RestaurantInfo__icon\",\n          \"aria-label\": \"phone number:\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), result.phone), React.createElement(\"img\", {\n          src: require(\"./assets/yelp_stars/regular/\".concat(result.rating, \".png\")),\n          alt: \"yelp ratings: \".concat(result.rating, \"/5\"),\n          className: \"RestaurantInfo__rating\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"RestaurantInfo__reviewCount\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \" Based on \", result.review_count, \" Reviews\"), React.createElement(\"a\", {\n          href: result.url,\n          className: \"RestaurantInfo__website\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"More infomration on Yelp\"));\n      });\n      return React.createElement(\"div\", {\n        className: \"RestuarantList__gallery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, RestaruantList);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        className: \"RestuarantList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.results.length ? this.renderRestaurantInfo() : this.renderEmptyState(), !!this.state.errorState && React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.error));\n    }\n  }]);\n\n  return RestaurantList;\n}(Component);\n\nexport default RestaurantList;","map":{"version":3,"sources":["/Users/varunramakrishnan/nets150finalproject/src/RestaurantList.jsx"],"names":["React","Component","axios","FontAwesomeIcon","RestaurantList","props","getRestaurantsFromApi","cuisine","price","setState","loading","get","headers","Authorization","params","categories","then","res","console","log","data","businesses","results","catch","err","errorState","state","prevProps","prevState","RestaruantList","map","result","id","image_url","name","location","display_address","phone","require","rating","review_count","url","length","renderRestaurantInfo","renderEmptyState","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass RestaurantList extends Component {\n\n    constructor(props) {\n        super(props);\n        //props.state is linked with the result sending back from its child a.k.a the result we returned in SearchForm element\n        this.state = {\n        //leverage the state to store the information return from API to make loading faster\n        results: [],\n        errorState: null,\n        loading: false,\n        };\n    }\n    \n    componentDidMount () {\n        this.getRestaurantsFromApi(this.props.cuisine, this.props.price);\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        if(this.props.cuisine !== prevProps.cuisine) {\n            this.setState({ \n                results: [], \n            }, () => this.getRestaurantsFromApi(this.props.cuisine, this.props.price))\n        }\n\n                if(this.props.price !== prevProps.price) {\n            this.setState({\n                results: [], \n            }, () => this.getRestaurantsFromApi(this.props.cuisine, this.props.price))\n        }\n    }\n    //function to get information from API \n    getRestaurantsFromApi = (cuisine, price) => {\n        //UI feedback to tell the user when we are retrieving infromation from the API \n        this.setState({ loading: true })\n\n        //using a proxy server cors-anywhere to get rid of the CROS probblem \n        //SUPER HOT TIP: passing the location variable, which equals to the user's input (see below). Instead of grabbbing the entire API, it will only retrieve the restaurants that are closed to the lcoation information we entered. This makes the lodading wayyyyyyy faster.\n        axios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?location=Philadelphia`, {\n        //required authorization format from API \n        headers: {\n            //to get the API from the .env file use process.env.{variable name}\n            Authorization: `Bearer bViYiVvQPGlIKygKlkCrFgsNcCnyNGJgUDCvTSG7dgooeyBjzEM-WzlkVhYsvItlMU-rNDno368sOtZxg2TWtpMgJXmyFIUSXgFzaK8UdwWOXQEL9sbY1yEZoCC5XHYx`\n        },\n        //option params passed to API call to retrieve only breakfast and lunch spots \n        params: {\n            categories: cuisine,\n            price: price\n        }\n        })\n        .then((res) => {\n            console.log(res.data.businesses)\n            //change the state of App to reflect on the result we are given from the API\n            //at the same time, setting the loading state to false \n            this.setState({ results: res.data.businesses, loading: false })\n        })\n        .catch((err) => {\n            //fire the errorState message if there is no information return from the API\n            this.setState({ errorState: `Sorry we coudln't find information related to the location you search, do you want to try something else?`, loading: false })\n        })\n    }\n\n    renderEmptyState () {\n        return (\n            <h2 className = \"heading-tertiary\">`Hang tight! We are working on getting you the list of best brunch spots in your neighborhood! `</h2>\n        )\n    }\n\n    renderRestaurantInfo () {\n        \n        const RestaruantList = this.state.results.map((result) => {\n            \n            return (    \n                <div \n                    className = \"RestaurantInfo\"\n                    key = {result.id}\n                >\n                    <img src = {result.image_url} alt = \"\" className = \"RestaurantInfo__img\" />\n                    <h2 className = \"heading-tertiary RestaurantInfo__name\">{result.name}</h2>\n                    \n                    <p className = \"RestaurantInfo__para\">\n                        <FontAwesomeIcon \n                        icon = \"map-marker-alt\" \n                        className = \"RestaurantInfo__icon\"\n                        aria-label = \"address:\" />\n                        {result.location.display_address[0]}, {result.location.display_address[1]}\n                    </p>\n                    \n                    <p className = \"RestaurantInfo__para\">\n                        <FontAwesomeIcon \n                        icon = \"phone\" \n                        className = \"RestaurantInfo__icon\"\n                        aria-label = \"phone number:\" />\n                        {result.phone}\n                    </p>\n\n                    <img \n                        src = {require(`./assets/yelp_stars/regular/${result.rating}.png`)}\n                        alt = {`yelp ratings: ${result.rating}/5`}\n                        className = \"RestaurantInfo__rating\"/>\n\n                    <p className = \"RestaurantInfo__reviewCount\"> Based on {result.review_count} Reviews</p>\n               \n                    <a \n                        href= {result.url} \n                        className = \"RestaurantInfo__website\">\n                            More infomration on Yelp\n                    </a>\n                </div>  \n            );\n        });\n\n        return(\n            <div className=\"RestuarantList__gallery\">{RestaruantList}</div>\n        )\n    }\n\n    render() {\n        return (\n            \n            <section className=\"RestuarantList\">\n                {this.state.results.length ? this.renderRestaurantInfo() : this.renderEmptyState()}\n\n                {/*conditional rendering for error state - when this.state.errorState is not true*/}\n                {!!this.state.errorState &&\n                    <h1>{this.state.error}</h1>\n                }   \n            </section>\n        )}\n\n}\nexport default RestaurantList"]},"metadata":{},"sourceType":"module"}